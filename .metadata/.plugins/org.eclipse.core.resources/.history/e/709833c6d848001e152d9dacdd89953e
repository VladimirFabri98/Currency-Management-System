package com.master.conversion.service;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpMethod;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.client.RestTemplate;

import com.master.api.dto.BankAccount;
import com.master.api.dto.CurrencyConversion;
import com.master.api.dto.CurrencyExchange;
import com.master.api.services.ConversionService;
import com.master.utility.exceptions.NotFoundException;

@RestController
public class ConversionServiceImpl implements ConversionService {

	@Autowired
	private RestTemplate template;

	private final String currencyExchangeUrl = "http://localhost:8000/currency-exchange";
	private final String bankAccountUrl = "http://localhost:8100/bank-account";

	@Override
	public ResponseEntity<?> executeConversion(String from, String to, String username, double quantity) {
		int abc = 0;
		if(abc == 0) {
			throw new NotFoundException("Testing not found");
		}
		BankAccount account = null;
		CurrencyExchange exchange = null;
		// getExchange by using from and to
		exchange = template.getForEntity(currencyExchangeUrl+"?from=" + from + "&to=" + to, CurrencyExchange.class).getBody();
		
		if(exchange.getExchangeRate() == 0.0) {
			return ResponseEntity.status(404).body("Requested exchange could not be found");
		}
		// use exhangeRate with quantity to gain total amount
		double amountToExchange = exchange.getExchangeRate() * quantity;
		// validate that there is an account with forwarded username
		BankAccount check = template.getForEntity(bankAccountUrl + "?username=" + username, BankAccount.class).getBody(); 
		
		if(check != null){
			// update the account with total amount
			account  = template.exchange(bankAccountUrl + "?from=" + from + "&to=" + to + "&quantityFrom="  + quantity +
					"&totalTo=" + amountToExchange + "&username=" + check.getUsername(), HttpMethod.PUT, null, BankAccount.class).getBody();
		}else {
			return ResponseEntity.status(404).body("Account with forwarded username:" + username + " does not exist");
		}
		// return the end result
		String message = "Converted " + quantity + " of " + from + " to " + amountToExchange + " of " + to;
		return ResponseEntity.ok(new CurrencyConversion(exchange,account,message));
	}

}
